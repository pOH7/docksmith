name: Reusable Sync Template

on:
  workflow_call:
    inputs:
      repo:
        description: 'Repository to sync (e.g., minio/minio)'
        required: true
        type: string
      sync_type:
        description: 'Type of sync (release, tag, or dockerhub)'
        required: true
        type: string
      source_images:
        description: 'YAML list of source images'
        required: false
        type: string
        default: '[]'
      dockerfile:
        description: 'Dockerfile content (use {VERSION} placeholder)'
        required: false
        type: string
        default: ''
      target_image:
        description: 'Target image name (for build_and_push)'
        required: false
        type: string
        default: ''
      version_transform:
        description: 'Python script to transform version (or "none")'
        required: false
        type: string
        default: 'none'
      tag_prefix:
        description: 'Tag prefix for DockerHub sync (optional)'
        required: false
        type: string
        default: ''

jobs:
  sync:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v6
        with:
          python-version: '3.11'
          cache: 'pip'
          cache-dependency-path: '.github/scripts/requirements.txt'

      - name: Install Python dependencies
        run: |
          pip install -r .github/scripts/requirements.txt

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ secrets.DOCKER_REGISTRY }}
          username: ${{ secrets.DOCKER_REGISTRY_USER }}
          password: ${{ secrets.DOCKER_REGISTRY_PASSWORD }}

      - name: Install GitHub CLI
        run: |
          type -p gh >/dev/null || (
            sudo mkdir -p -m 755 /etc/apt/keyrings &&
            curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | sudo tee /etc/apt/keyrings/githubcli-archive-keyring.gpg > /dev/null &&
            sudo chmod go+r /etc/apt/keyrings/githubcli-archive-keyring.gpg &&
            echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | sudo tee /etc/apt/sources.list.d/github-cli.list > /dev/null &&
            sudo apt update &&
            sudo apt install gh -y
          )

      - name: Convert YAML inputs to JSON
        id: convert
        uses: actions/github-script@v7
        with:
          script: |
            const yaml = require('js-yaml');

            // Convert source_images YAML to JSON
            let sourceImages = '[]';
            if ('${{ inputs.source_images }}' && '${{ inputs.source_images }}' !== '[]') {
              try {
                const parsed = yaml.load(`${{ inputs.source_images }}`);
                sourceImages = JSON.stringify(parsed || []);
              } catch (e) {
                console.log('Using source_images as-is:', '${{ inputs.source_images }}');
                sourceImages = '${{ inputs.source_images }}';
              }
            }

            // Convert version_transform to JSON string
            let versionTransform = '"none"';
            if ('${{ inputs.version_transform }}' && '${{ inputs.version_transform }}' !== 'none') {
              versionTransform = JSON.stringify('${{ inputs.version_transform }}');
            }

            core.setOutput('source_images_json', sourceImages);
            core.setOutput('version_transform_json', versionTransform);

      - name: Sync project
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          MINIO_URL: ${{ secrets.MINIO_URL }}
          MINIO_ACCESS_KEY: ${{ secrets.MINIO_ACCESS_KEY }}
          MINIO_SECRET_KEY: ${{ secrets.MINIO_SECRET_KEY }}
          DOCKER_REGISTRY: ${{ secrets.DOCKER_REGISTRY }}
          DOCKER_REGISTRY_USER: ${{ secrets.DOCKER_REGISTRY_USER }}
          DOCKER_REGISTRY_PASSWORD: ${{ secrets.DOCKER_REGISTRY_PASSWORD }}
          DOCKER_REGISTRY_NAMESPACE: ${{ secrets.DOCKER_REGISTRY_NAMESPACE }}
        run: |
          python .github/scripts/sync_project.py \
            --repo "${{ inputs.repo }}" \
            --sync-type "${{ inputs.sync_type }}" \
            --source-images '${{ steps.convert.outputs.source_images_json }}' \
            --version-transform '${{ steps.convert.outputs.version_transform_json }}' \
            ${{ inputs.dockerfile && format('--dockerfile "{0}"', inputs.dockerfile) || '' }} \
            ${{ inputs.target_image && format('--target-image "{0}"', inputs.target_image) || '' }} \
            ${{ inputs.tag_prefix && format('--tag-prefix "{0}"', inputs.tag_prefix) || '' }}
